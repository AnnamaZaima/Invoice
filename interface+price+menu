; ============================================================
; Grocery POS — UI ONLY (8086, MASM/TASM)
; - Login: Admin=press '1', Cashier=press '2'
; - Admin: 1) Update Item Price, 4) View Grocery List, 7) Logout
; - Cashier: 1) View Grocery List, 5) Logout
; - View Grocery List is two-step: pick category -> see items+prices
; ============================================================

.model  large
.stack  1000h

.data
; ---------- Common strings ----------
crlf            db 13,10,'$'
press_any_key   db 13,10,'(Press any key to continue...)$'
coming_soon     db 13,10,'[ Feature coming soon — UI only ]$'
invalid_msg     db 13,10,'Invalid input. Try again.$'
bye_msg         db 13,10,'Exiting... Goodbye!$'
back_msg        db 13,10,'Press ''B'' to go back.$'
tk_label        db '  TK $'     ; prefix before numeric price

; *** MISSING EARLIER — added now ***
cat_prompt      db 13,10,'Select category (1-5) or B=Back: $'
cat_back        db 13,10,'Press ''B'' to go back to categories.$'

; ---------- Role select / login ----------
title_line1     db 13,10,'================= GROCERY POS =================$'
title_line2     db 13,10,'Select Role:$'
role_line1      db 13,10,'  1) Admin$'
role_line2      db 13,10,'  2) Cashier$'
role_line3      db 13,10,'  3) Exit$'
role_choice_msg db 13,10,'Enter choice (1-3): $'

admin_pw_prompt   db 13,10,'Enter Admin password (press ''1''): $'
cashier_pw_prompt db 13,10,'Enter Cashier password (press ''2''): $'
wrong_pw          db 13,10,'Incorrect password. Returning to role screen...$'

; tracks who opened the list (1=admin, 2=cashier)
last_menu_role  db 0

; ---------- Admin menu ----------
admin_header    db 13,10,'----------- ADMIN MENU -----------$'
admin_list1     db 13,10,'  1) Update Item Price$'
admin_list2     db 13,10,'  2) Add Item$'
admin_list3     db 13,10,'  3) Remove Item$'
admin_list4     db 13,10,'  4) View Grocery List$'
admin_list5     db 13,10,'  5) Low Stock Alert$'
admin_list6     db 13,10,'  6) Set Discount$'
admin_list7     db 13,10,'  7) Logout$'
admin_prompt    db 13,10,'Choose (1-7): $'

; ---------- Cashier menu ----------
cash_header     db 13,10,'----------- CASHIER MENU -----------$'
cash_list1      db 13,10,'  1) View Grocery List$'
cash_list2      db 13,10,'  2) Add to Cart$'
cash_list3      db 13,10,'  3) Clear Cart$'
cash_list4      db 13,10,'  4) Generate Bill$'
cash_list5      db 13,10,'  5) Logout$'
cash_prompt     db 13,10,'Choose (1-5): $'

; ---------- Update price UI ----------
update_price_title db 13,10,'== UPDATE ITEM PRICE ==$'
choose_category    db 13,10,'Select Category (1=Drinks, 2=Chips, 3=Bakery, 4=Dairy, 5=Frozen): $'
choose_item        db 13,10,'Enter item number (1-6): $'
ask_new_price      db 13,10,'Enter new price (2 digits, 00-99): $'
price_updated      db 13,10,'Price updated successfully!$'
price_label        db '      TK.$'

; ---------- Grocery list UI ----------
m1  db 10,13,'            XXXXXX Welcome to our store! XXXXXX$',10,13
m3  db 10,13,'  ** 1. Drinks Menu             **$'
m4  db 10,13,'  ** 2. Chips Menu              **$'
m5  db 10,13,'  ** 3. Bakery Menu             **$'
m6  db 10,13,'  ** 4. Dairy Items             **$'
m7  db 10,13,'  ** 5. Frozen Food Menu        **$'
m8  db 10,13,'  ** Choose your food from the menu **$'

; Drinks
m9  db 10,13,'  ** 1. Mountain Dew      **$'
m10 db 10,13,'  ** 2. Chocolate Milk    **$'
m11 db 10,13,'  ** 3. Pepsi             **$'
m12 db 10,13,'  ** 4. Frutika           **$'
m13 db 10,13,'  ** 5. Coffee            **$'
m14 db 10,13,'  ** 6. Orange Juice      **$'

; Chips
m15 db 10,13,'  ** 1. LAYS              **$'
m16 db 10,13,'  ** 2. Doritos           **$'
m17 db 10,13,'  ** 3. Kurkure           **$'
m18 db 10,13,'  ** 4. Pringles          **$'
m19 db 10,13,'  ** 5. Potato Crackers   **$'
m20 db 10,13,'  ** 6. Tortilla Chips    **$'

; Bakery
m21 db 10,13,'  ** 1. Chocolate Cake    **$'
m22 db 10,13,'  ** 2. Croissant         **$'
m23 db 10,13,'  ** 3. Dry Cake          **$'
m24 db 10,13,'  ** 4. Bread             **$'
m25 db 10,13,'  ** 5. Pastry            **$'
m26 db 10,13,'  ** 6. Biscuit           **$'

; Dairy
m27 db 10,13,'  ** 1. Milk              **$'
m28 db 10,13,'  ** 2. Yogurt            **$'
m29 db 10,13,'  ** 3. Butter            **$'
m30 db 10,13,'  ** 4. Cheese            **$'
m31 db 10,13,'  ** 5. Curd              **$'
m32 db 10,13,'  ** 6. Flavored Milk     **$'

; Frozen
m33 db 10,13,'  ** 1. Ice-Cream         **$'
m34 db 10,13,'  ** 2. Frozen Pizza      **$'
m35 db 10,13,'  ** 3. French Fries      **$'
m36 db 10,13,'  ** 4. Frozen Samosa     **$'
m37 db 10,13,'  ** 5. Frozen Nuggets    **$'
m38 db 10,13,'  ** 6. Frozen Paratha    **$'

; ---------- Price tables (editable) ----------
drink_prices   db 30,40,30,15,50,60
chip_prices    db 50,40,30,35,25,45
bakery_prices  db 95,40,90,55,70,30
dairy_prices   db 50,40,80,95,35,55
frozen_prices  db 90,95,60,80,95,90

.code

; =============== Helpers ===================================
puts    proc near
        mov     ah,09h
        int     21h
        ret
puts    endp

getch   proc near
        mov     ah,08h
        int     21h
        ret
getch   endp

getche  proc near
        mov     ah,01h
        int     21h
        ret
getche  endp

cls     proc near
        mov     ax,0003h
        int     10h
        ret
cls     endp

pause_any proc near
        lea     dx, press_any_key
        call    puts
        call    getch
        ret
pause_any endp

; Read two ASCII digits -> AL = 0..99
ReadTwoDigits proc near
        call    getche
        sub     al,'0'
        mov     ah,0
        mov     bl,10
        mul     bl
        mov     bl,al
        call    getche
        sub     al,'0'
        add     al,bl
        ret
ReadTwoDigits endp

; Print "  TK " then AX as decimal
PrintTKPrice proc near
        push    ax
        lea     dx, tk_label
        call    puts
        pop     ax
        call    PrintDec
        ret
PrintTKPrice endp

; Print AX as unsigned decimal
PrintDec proc near
        push    ax
        push    bx
        push    cx
        push    dx
        mov     bx,10
        xor     cx,cx
        cmp     ax,0
        jne     PD1
        mov     dl,'0'
        mov     ah,02h
        int     21h
        jmp     PD3
PD1:    xor     dx,dx
PD2:    div     bx
        push    dx
        inc     cx
        or      ax,ax
        jne     PD2
PD4:    pop     dx
        add     dl,'0'
        mov     ah,02h
        int     21h
        loop    PD4
PD3:    pop     dx
        pop     cx
        pop     bx
        pop     ax
        ret
PrintDec endp

; Print item text at DX, then its price byte from table at SI+BL
; Inputs: DX = item string, SI = price table base, BL = index (0..5)
PrintItemWithPrice proc near
        push    ax
        push    bx
        push    dx
        mov     ah,09h
        int     21h
        mov     al,[si+bx]
        xor     ah,ah
        call    PrintTKPrice
        lea     dx, crlf
        call    puts
        pop     dx
        pop     bx
        pop     ax
        ret
PrintItemWithPrice endp

; =============== Program ===================================
MAIN    proc far
        mov     ax,@data
        mov     ds,ax
        cld

Role_Screen:
        call    cls
        lea     dx, title_line1
        call    puts
        lea     dx, title_line2
        call    puts
        lea     dx, role_line1
        call    puts
        lea     dx, role_line2
        call    puts
        lea     dx, role_line3
        call    puts
        lea     dx, role_choice_msg
        call    puts
        call    getch

        cmp     al,'1'             ; Admin
        je      Admin_Login
        cmp     al,'2'             ; Cashier
        je      Cash_Login
        cmp     al,'3'             ; Exit
        je      Quit_Program

        lea     dx, invalid_msg
        call    puts
        call    pause_any
        jmp     Role_Screen

; --- Admin login expects '1' ---
Admin_Login:
        call    cls
        lea     dx, admin_pw_prompt
        call    puts
        call    getch
        cmp     al,'1'
        jne     Pw_Fail
        mov     last_menu_role,1
        jmp     Admin_Menu

; --- Cashier login expects '2' ---
Cash_Login:
        call    cls
        lea     dx, cashier_pw_prompt
        call    puts
        call    getch
        cmp     al,'2'
        jne     Pw_Fail
        mov     last_menu_role,2
        jmp     Cashier_Menu

Pw_Fail:
        lea     dx, wrong_pw
        call    puts
        call    pause_any
        jmp     Role_Screen

; ----------------- ADMIN MENU -------------------------
Admin_Menu:
        mov     last_menu_role,1
        call    cls
        lea     dx, admin_header
        call    puts
        lea     dx, admin_list1
        call    puts
        lea     dx, admin_list2
        call    puts
        lea     dx, admin_list3
        call    puts
        lea     dx, admin_list4
        call    puts
        lea     dx, admin_list5
        call    puts
        lea     dx, admin_list6
        call    puts
        lea     dx, admin_list7
        call    puts
        lea     dx, admin_prompt
        call    puts
        call    getch

        cmp     al,'1'           ; Update Item Price
        je      UpdatePrice
        cmp     al,'4'           ; View Grocery List
        je      ShowGrocery
        cmp     al,'7'           ; Logout
        je      Role_Screen

        lea     dx, coming_soon
        call    puts
        call    pause_any
        jmp     Admin_Menu

; ----------------- CASHIER MENU -----------------------
Cashier_Menu:
        mov     last_menu_role,2
        call    cls
        lea     dx, cash_header
        call    puts
        lea     dx, cash_list1
        call    puts
        lea     dx, cash_list2
        call    puts
        lea     dx, cash_list3
        call    puts
        lea     dx, cash_list4
        call    puts
        lea     dx, cash_list5
        call    puts
        lea     dx, cash_prompt
        call    puts
        call    getch

        cmp     al,'1'           ; View Grocery List
        je      ShowGrocery
        cmp     al,'5'           ; Logout
        je      Role_Screen

        lea     dx, invalid_msg
        call    puts
        call    pause_any
        jmp     Cashier_Menu

; --------------- UPDATE PRICE (Admin: option 1) ---------
UpdatePrice:
        call    cls
        lea     dx, update_price_title
        call    puts

        ; Category 1..5
        lea     dx, choose_category
        call    puts
        call    getche
        sub     al,'0'
        cmp     al,1
        jb      Admin_Menu
        cmp     al,5
        ja      Admin_Menu
        mov     bl,al                 ; BL = category (1..5)

        ; Item 1..6
        lea     dx, choose_item
        call    puts
        call    getche
        sub     al,'0'
        cmp     al,1
        jb      Admin_Menu
        cmp     al,6
        ja      Admin_Menu
        dec     al
        mov     bh,al                 ; BH = item index (0..5)

        ; New 2-digit price
        lea     dx, ask_new_price
        call    puts
        call    ReadTwoDigits         ; AL = 0..99
        mov     dl,al                 ; DL = price

        ; DI -> selected price table
        cmp     bl,1
        je      U_Drink
        cmp     bl,2
        je      U_Chip
        cmp     bl,3
        je      U_Bakery
        cmp     bl,4
        je      U_Dairy
        lea     di, frozen_prices
        jmp     U_Store
U_Drink: lea     di, drink_prices
         jmp     U_Store
U_Chip:  lea     di, chip_prices
         jmp     U_Store
U_Bakery:lea     di, bakery_prices
         jmp     U_Store
U_Dairy: lea     di, dairy_prices

U_Store:
        mov     al,dl
        mov     bx,0
        mov     bl,bh               ; BL=index 0..5
        mov     [di+bx],al          ; write new price
        lea     dx, price_updated
        call    puts
        call    pause_any
        jmp     Admin_Menu

; --------------- VIEW GROCERY LIST (two-step) ----------
ShowGrocery:
        call    cls

CategoriesMenu:
        lea     dx, m1
        call    puts
        lea     dx, m3
        call    puts
        lea     dx, m4
        call    puts
        lea     dx, m5
        call    puts
        lea     dx, m6
        call    puts
        lea     dx, m7
        call    puts
        lea     dx, cat_prompt
        call    puts
        call    getch

        cmp     al,'b'
        je      BackToCallerFromCategories
        cmp     al,'B'
        je      BackToCallerFromCategories

        cmp     al,'1'
        je      Cat_Drinks
        cmp     al,'2'
        je      Cat_Chips
        cmp     al,'3'
        je      Cat_Bakery
        cmp     al,'4'
        je      Cat_Dairy
        cmp     al,'5'
        je      Cat_Frozen
        jmp     CategoriesMenu

Cat_Drinks:
        call    cls
        lea     dx, m3
        call    puts
        lea     dx, m8
        call    puts
        lea     si, drink_prices
        mov     bl,0
        lea     dx, m9
        call    PrintItemWithPrice
        inc     bl
        lea     dx, m10
        call    PrintItemWithPrice
        inc     bl
        lea     dx, m11
        call    PrintItemWithPrice
        inc     bl
        lea     dx, m12
        call    PrintItemWithPrice
        inc     bl
        lea     dx, m13
        call    PrintItemWithPrice
        inc     bl
        lea     dx, m14
        call    PrintItemWithPrice
        lea     dx, cat_back
        call    puts
WaitBackDr:
        call    getch
        cmp     al,'b'
        je      CategoriesMenu
        cmp     al,'B'
        jne     WaitBackDr
        jmp     CategoriesMenu

Cat_Chips:
        call    cls
        lea     dx, m4
        call    puts
        lea     si, chip_prices
        mov     bl,0
        lea     dx, m15
        call    PrintItemWithPrice
        inc     bl
        lea     dx, m16
        call    PrintItemWithPrice
        inc     bl
        lea     dx, m17
        call    PrintItemWithPrice
        inc     bl
        lea     dx, m18
        call    PrintItemWithPrice
        inc     bl
        lea     dx, m19
        call    PrintItemWithPrice
        inc     bl
        lea     dx, m20
        call    PrintItemWithPrice
        lea     dx, cat_back
        call    puts
WaitBackCh:
        call    getch
        cmp     al,'b'
        je      CategoriesMenu
        cmp     al,'B'
        jne     WaitBackCh
        jmp     CategoriesMenu

Cat_Bakery:
        call    cls
        lea     dx, m5
        call    puts
        lea     si, bakery_prices
        mov     bl,0
        lea     dx, m21
        call    PrintItemWithPrice
        inc     bl
        lea     dx, m22
        call    PrintItemWithPrice
        inc     bl
        lea     dx, m23
        call    PrintItemWithPrice
        inc     bl
        lea     dx, m24
        call    PrintItemWithPrice
        inc     bl
        lea     dx, m25
        call    PrintItemWithPrice
        inc     bl
        lea     dx, m26
        call    PrintItemWithPrice
        lea     dx, cat_back
        call    puts
WaitBackBk:
        call    getch
        cmp     al,'b'
        je      CategoriesMenu
        cmp     al,'B'
        jne     WaitBackBk
        jmp     CategoriesMenu

Cat_Dairy:
        call    cls
        lea     dx, m6
        call    puts
        lea     si, dairy_prices
        mov     bl,0
        lea     dx, m27
        call    PrintItemWithPrice
        inc     bl
        lea     dx, m28
        call    PrintItemWithPrice
        inc     bl
        lea     dx, m29
        call    PrintItemWithPrice
        inc     bl
        lea     dx, m30
        call    PrintItemWithPrice
        inc     bl
        lea     dx, m31
        call    PrintItemWithPrice
        inc     bl
        lea     dx, m32
        call    PrintItemWithPrice
        lea     dx, cat_back
        call    puts
WaitBackDy:
        call    getch
        cmp     al,'b'
        je      CategoriesMenu
        cmp     al,'B'
        jne     WaitBackDy
        jmp     CategoriesMenu

Cat_Frozen:
        call    cls
        lea     dx, m7
        call    puts
        lea     si, frozen_prices
        mov     bl,0
        lea     dx, m33
        call    PrintItemWithPrice
        inc     bl
        lea     dx, m34
        call    PrintItemWithPrice
        inc     bl
        lea     dx, m35
        call    PrintItemWithPrice
        inc     bl
        lea     dx, m36
        call    PrintItemWithPrice
        inc     bl
        lea     dx, m37
        call    PrintItemWithPrice
        inc     bl
        lea     dx, m38
        call    PrintItemWithPrice
        lea     dx, cat_back
        call    puts
WaitBackFr:
        call    getch
        cmp     al,'b'
        je      CategoriesMenu
        cmp     al,'B'
        jne     WaitBackFr
        jmp     CategoriesMenu

BackToCallerFromCategories:
        cmp     last_menu_role,1
        je      Admin_Menu
        jmp     Cashier_Menu

; ---------------- Exit -------------------
Quit_Program:
        call    cls
        lea     dx, bye_msg
        call    puts
        mov     ax,4C00h
        int     21h

MAIN endp
end MAIN

